"""
Django settings for amzstock project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import mimetypes #for css

from django.utils.translation import gettext_lazy as _
LANGUAGES =[ ('en', _('English')),
('de', _('German')),]
LANGUAGE_CODE = 'de'
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



mimetypes.add_type("text/css", ".css", True)

LOCALE_PATHS = (
    '/home/django_AMZ' + '/amzstock/locale',
    '/home/django_AMZ' + '/polls/locale',  )
    

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@#%w+)z&3zku+s2f&x#r*f%xey!2@9eo)pmqt1p4_hn!i+%)xi'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['82.165.48.65','localhost','127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #own-custom-apps
    'polls.apps.PollsConfig',
    'smartUserManagement.apps.SmartusermanagementConfig',
    #custom-allauth
    'django.contrib.sites',
    #custom-allauth-custom...
    #basic
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    #authent-apis
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.amazon',
    'allauth.socialaccount.providers.instagram',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.github',
    #Tables
    'django_tables2',
    'django_filters',
    'bootstrap3',
    'django_ajax_tables',
    'django_serverside_datatable',
    #translation,
    'rosetta',
    #...
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware', # Added
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'amzstock.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #custom-allauth
                'django.template.context_processors.request',
            ],
        },
    },
]

#custom-authent...
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]
#...

WSGI_APPLICATION = 'amzstock.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'amz_users',
        'USER': 'passi',
        'PASSWORD': 'Arbeit-0',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    },
        'mongodb': {
        'ENGINE': 'djongo',
        'NAME': 'amz_tracking',
        'ENFORCE_SCHEMA': False,
        'CLIENT': {
                'host': '127.0.0.1',
                'port': '3307',
                'username': 'passi',
                'password': 'Arbeit-0',
            }
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/





TIME_ZONE = 'Europe/Berlin'




USE_I18N = True


USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#custom-allauth...
SITE_ID = 3
#Page to land after login
LOGIN_REDIRECT_URL = '/'
# Provider specific settings

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'SCOPE': [
#             'profile',
#             'email',
#         ],
#         'AUTH_PARAMS': {
#             'access_type': 'online',
#         }
#     }
# }
'''
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            "client_id":"104125307444-4mc59n7eeah4aao3irg8l4auk5jvp2qv.apps.googleusercontent.com",
            "project_id":"djangoamz","auth_uri":"https://accounts.google.com/o/oauth2/auth",
            "token_uri":"https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs",
            "redirect_uris":["http://localhost:80/accounts/google/login/callback/"],
            "javascript_origins":["http://127.0.0.1:80"],
            "hd=http://127.0.0.1",
            
        }
    }
}
'''
#...